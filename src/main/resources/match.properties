team.player.count.mismatch=The number of players required for the teams does not add up to the number of players
team.rank.count.mismatch=The number of teams does not match the number of ranks
create.success=Successfully created match
suggest.cli.title=Suggest team setups for {{name}}
suggest.cli.player={{name}}\t( Mean(\u03BC)={{mean}}, Std-Dev(\u03C3)={{standardDeviation}} )
suggest.table.quality.header=Quality
suggest.table.team.header=Setup
no.match.found=No matches found: \n\
\ \ (use `match add --help` to add a match) \n\
\ \ (use `match ls --help` to list matches)
last.match.list.title(limit)=Showing the last {{limit}} matches:
last.match.list.entry(date,session,game,teams)=> {{date}} {{game}} {{{teams}}} ({{session}})
match.team.player.entry(rank,name,mean)={{name}}
match.team.entry(rank,team)=#{{rank}}:{{{team}}}
delete.command=Remove match(es):
delete.entry.success(id)=> {{id}} Removed
delete.entry.failure(id)=> {{id}} Failed
delete.command.failure=Could not delete a match \n\
\ \ (use 'match ls' to find a match id to remove) \n\
\ \ (use 'match rm <id>' to remove the match)
view.match.detail.title(id,game,date)={{date}} {{game}} ({{id}})
view.match.detail.player.entry(rank,person,mean,stdev)=> #{{rank}} (\u03BC)={{mean}} (\u03C3)={{stdev}} {{person}}
quality.title(game,quality)={{game}} match quality: {{quality}}
quality.team.player.entry(mean,stdev,name)=(\u03BC)={{mean}} (\u03C3)={{stdev}} {{name}}
quality.team.player.team(team)=> {{{team}}}